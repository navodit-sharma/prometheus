{{- if and (index $.Values.global "prometheus-postgres-exporter" "enabled") -}}
{{- if .Values.global.web.ssl.externalSecret.enabled }}
{{- if .Values.global.web.ssl.externalSecret.esoMigrated }}
---
# Adding cert and key into secret from Key vault. (ESO)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-config-secret
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ default "default" .Values.global.web.ssl.externalSecret.ClusterSecretStore }}
  target:
    creationPolicy: Owner
    name: postgres-config-secret
    template:
      type: Opaque
  data:
    - remoteRef:
        key: prometheus-postgres-monitor-password
      secretKey: postgres-monitor-password
{{- else }}
---
# Adding cert and key into secret from Key vault. (KES)
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: postgres-config-secret
spec:
  backendType: {{ .Values.global.web.ssl.externalSecret.backendType }}
  template:
    type: Opaque
  keyVaultName: {{ .Values.global.web.ssl.externalSecret.keyVaultName }}
  data:
    - name: postgres-monitor-password
      key: prometheus-postgres-monitor-password
      isBinary: false
{{- end }}
{{- else }}
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-config-secret
type: Opaque
data:
  postgres-monitor-password: {{ .Values.global.postgres.password | b64enc }}
{{- end }}
{{- end }}
