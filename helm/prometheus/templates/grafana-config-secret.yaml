{{- if and (index $.Values.global "kube-prometheus-stack" "enabled") (index $.Values "kube-prometheus-stack" "grafana" "enabled") -}}
{{- if .Values.global.web.ssl.externalSecret.enabled }}
{{- if .Values.global.web.ssl.externalSecret.esoMigrated }}
---
# Adding cert and key into secret from Key vault. (ESO)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "{{ .Release.Name }}-grafana-env-vars"
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ default "default" .Values.global.web.ssl.externalSecret.ClusterSecretStore }}
  target:
    creationPolicy: Owner
    name: "{{ .Release.Name }}-grafana-env-vars"
    template:
      type: Opaque
  data:
    - remoteRef:
        key: prometheus-grafana-admin-password
      secretKey: grafana-admin-password
    - remoteRef:
        key: prometheus-smtp-apikey
      secretKey: GF_SMTP_PASSWORD
{{- else }}
---
# Adding cert and key into secret from Key vault. (KES)
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: "{{ .Release.Name }}-grafana-env-vars"
spec:
  backendType: {{ .Values.global.web.ssl.externalSecret.backendType }}
  template:
    type: Opaque
  keyVaultName: {{ .Values.global.web.ssl.externalSecret.keyVaultName }}
  data:
    - name: grafana-admin-password
      key: prometheus-grafana-admin-password
      isBinary: false
    - name: GF_SMTP_PASSWORD
      key: prometheus-smtp-apikey
      isBinary: false
{{- end }}
{{- else }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-grafana-env-vars"
type: Opaque
data:
  grafana-admin-password: {{ .Values.global.grafanaAdminPassword }}
  GF_SMTP_PASSWORD: {{ .Values.global.smtpApiKey }}
{{- end }}
{{- end }}
