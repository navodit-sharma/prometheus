{{- if and (index $.Values.global "kube-prometheus-stack" "enabled") (index $.Values "kube-prometheus-stack" "alertmanager" "enabled") -}}
{{- if and (.Values.global.web.ssl.externalSecret.enabled) (.Values.global.web.ssl.externalSecret.esoMigrated) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config-secret-template
data:
  alertmanager.yaml: |
    global:
      resolve_timeout: 5m
    inhibit_rules:
    - equal:
      - namespace
      - alertname
      source_matchers:
      - severity = critical
      target_matchers:
      - severity =~ warning|info
    - equal:
      - namespace
      - alertname
      source_matchers:
      - severity = warning
      target_matchers:
      - severity = info
    - equal:
      - namespace
      source_matchers:
      - alertname = InfoInhibitor
      target_matchers:
      - severity = info
    receivers:
    - name: "null"
    - email_configs:
      - auth_identity: apikey
        auth_password: {{`{{`}} .smtpapikey {{`}}`}}
        auth_username: apikey
        from: alerts@valamis.com
        headers:
          From: Valamis Alert Manager<alerts@valamis.com>
          Subject: '{{`{{`}}`{{`{{`}}`}} .CommonLabels.alertname {{`{{`}}`}}`{{`}}`}} - [ Cluster = {{`{{`}}`{{`{{`}}`}} .CommonLabels.cluster {{`{{`}}`}}`{{`}}`}} ]'
          To: "{{ .Values.global.smtpDestinationAddress }}"
        html: '{{`{{`}}`{{`{{`}}`}} template "email.default.html" . {{`{{`}}`}}`{{`}}`}}'
        require_tls: true
        send_resolved: false
        smarthost: smtp.sendgrid.net:587
        to: "{{ .Values.global.smtpDestinationAddress }}"
      name: email
    route:
      group_by:
      - alertname
      group_interval: 5m
      group_wait: 30s
      receiver: "null"
      repeat_interval: 24h
      routes:
      - match:
          alertname: KubernetesClientCertificateExpiresSoon
        receiver: email
      - match:
          alertname: KubernetesContainerOomKilled
        receiver: email
      - match:
          alertname: PersistentVolumeUtilizationCritical
        receiver: email
      - match:
          alertname: PersistentVolumeFull
        receiver: email
      - match:
          alertname: PersistentvolumeclaimPending
        receiver: email
      - match:
          alertname: PersistentvolumeError
        receiver: email
      - match:
          alertname: KubernetesPodCrashLooping
        receiver: email
      - match:
          alertname: KafkaConsumerLag
        receiver: email
    templates:
    - /etc/alertmanager/config/*.tmpl
---
# Secret - (ESO)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "alertmanager-config-secret"
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ default "default" .Values.global.web.ssl.externalSecret.ClusterSecretStore }}
  target:
    creationPolicy: 'Owner'
    name: "alertmanager-config-secret"
    template:
      type: Opaque
      engineVersion: v2
      templateFrom:
      - configMap:
          name: alertmanager-config-secret-template
          items:
          - key: alertmanager.yaml
  data:
    - remoteRef:
        key: prometheus-smtp-apikey
      secretKey: smtpapikey
{{- else }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "alertmanager-config-secret"
type: Opaque
data:
  alertmanager.yaml: |
    global:
      resolve_timeout: 5m
    inhibit_rules:
    - equal:
      - namespace
      - alertname
      source_matchers:
      - severity = critical
      target_matchers:
      - severity =~ warning|info
    - equal:
      - namespace
      - alertname
      source_matchers:
      - severity = warning
      target_matchers:
      - severity = info
    - equal:
      - namespace
      source_matchers:
      - alertname = InfoInhibitor
      target_matchers:
      - severity = info
    receivers:
    - name: "null"
    - email_configs:
      - auth_identity: apikey
        auth_password: "{{ .Values.global.smtpApiKey }}"
        auth_username: apikey
        from: alerts@valamis.com
        headers:
          From: Valamis Alert Manager<alerts@valamis.com>
          Subject: '{{`{{`}} .CommonLabels.alertname {{`}}`}} - [ Cluster = {{`{{`}} .CommonLabels.cluster {{`}}`}} ]'
          To: "{{ .Values.global.smtpDestinationAddress }}"
        html: '{{`{{`}} template "email.default.html" . {{`}}`}}'
        require_tls: true
        send_resolved: false
        smarthost: smtp.sendgrid.net:587
        to: "{{ .Values.global.smtpDestinationAddress }}"
      name: email
    route:
      group_by:
      - alertname
      group_interval: 5m
      group_wait: 30s
      receiver: "null"
      repeat_interval: 24h
      routes:
      - match:
          alertname: KubernetesClientCertificateExpiresSoon
        receiver: email
      - match:
          alertname: KubernetesContainerOomKilled
        receiver: email
      - match:
          alertname: PersistentVolumeUtilizationCritical
        receiver: email
      - match:
          alertname: PersistentVolumeFull
        receiver: email
      - match:
          alertname: PersistentvolumeclaimPending
        receiver: email
      - match:
          alertname: PersistentvolumeError
        receiver: email
      - match:
          alertname: KubernetesPodCrashLooping
        receiver: email
      - match:
          alertname: KafkaConsumerLag
        receiver: email
    templates:
    - /etc/alertmanager/config/*.tmpl
{{- end }}
{{- end }}
